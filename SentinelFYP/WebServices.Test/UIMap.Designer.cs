// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace WebServices.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Test_1 - Use 'Test_1Params' to pass parameters into this method.
        /// </summary>
        public void Test_1()
        {
            #region Variable Declarations
            WinControl uIItemDocument = this.UILocalhostSentinelGooWindow.UIItemWindow.UIItemDocument;
            WinClient uIThepageatlocalhostsaClient = this.UIThepageatlocalhostsaWindow.UIThepageatlocalhostsaClient;
            WinButton uIOKButton = this.UIThepageatlocalhostsaWindow.UIThepageatlocalhostsaClient1.UIOKButton;
            WinControl uIItemDocument1 = this.UIItemWindow.UIItemWindow1.UIItemDocument;
            #endregion

            // Click document
            Mouse.Click(uIItemDocument, new Point(783, 371));

            // Type 'DR_ARCHITECT{Tab}randomnes' in document
            Keyboard.SendKeys(uIItemDocument, this.Test_1Params.UIItemDocumentSendKeys, ModifierKeys.None);

            // Click document
            Mouse.Click(uIItemDocument, new Point(772, 482));

            // Click 'The page at localhost says:' client
            Mouse.Click(uIThepageatlocalhostsaClient, new Point(287, 321));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(45, 18));

            // Click document
            Mouse.Click(uIItemDocument, new Point(812, 408));

            // Click document
            Mouse.Click(uIItemDocument, new Point(812, 421));

            // Type 'randomness' in document
            Keyboard.SendKeys(uIItemDocument, this.Test_1Params.UIItemDocumentSendKeys1, ModifierKeys.None);

            // Click document
            Mouse.Click(uIItemDocument, new Point(775, 470));

            // Click document
            Mouse.Click(uIItemDocument, new Point(707, 65));

            // Click document
            Mouse.Click(uIItemDocument, new Point(531, 219));

            // Click document
            Mouse.Click(uIItemDocument, new Point(763, 475));

            // Move document
            Mouse.StartDragging(uIItemDocument1, new Point(51, 9));
            Mouse.StopDragging(uIItemDocument1, -7, 10);

            // Click document
            Mouse.Click(uIItemDocument, new Point(942, 535));

            // Click document
            Mouse.Click(uIItemDocument, new Point(435, 632));

            // Click document
            Mouse.Click(uIItemDocument, new Point(465, 676));

            // Click document
            Mouse.Click(uIItemDocument, new Point(492, 663));

            // Click document
            Mouse.Click(uIItemDocument, new Point(712, 84));

            // Click document
            Mouse.Click(uIItemDocument, new Point(728, 197));

            // Click document
            Mouse.Click(uIItemDocument, new Point(764, 468));

            // Click document
            Mouse.Click(uIItemDocument1, new Point(48, 21));

            // Click document
            Mouse.Click(uIItemDocument, new Point(932, 523));

            // Click document
            Mouse.Click(uIItemDocument, new Point(889, 66));

            // Move document
            Mouse.StartDragging(uIItemDocument, new Point(542, 317));
            Mouse.StopDragging(uIItemDocument, 129, 91);

            // Move document
            Mouse.StartDragging(uIItemDocument, new Point(545, 337));
            Mouse.StopDragging(uIItemDocument, 152, 110);

            // Move document
            Mouse.StartDragging(uIItemDocument, new Point(563, 334));
            Mouse.StopDragging(uIItemDocument, 198, 155);

            // Move document
            Mouse.StartDragging(uIItemDocument, new Point(665, 347));
            Mouse.StopDragging(uIItemDocument, -107, 103);

            // Click document
            Mouse.Click(uIItemDocument, new Point(807, 78));

            // Click document
            Mouse.Click(uIItemDocument, new Point(605, 548));

            // Click document
            Mouse.Click(uIItemDocument, new Point(549, 515));

            // X-button1-Click document
            Mouse.Click(uIItemDocument, MouseButtons.XButton1, ModifierKeys.None, new Point(734, 205));

            // Click document
            Mouse.Click(uIItemDocument, new Point(682, 526));

            // Click document
            Mouse.Click(uIItemDocument, new Point(400, 140));

            // Click document
            Mouse.Click(uIItemDocument, new Point(400, 140));

            // Click document
            Mouse.Click(uIItemDocument, new Point(404, 178));

            // Click document
            Mouse.Click(uIItemDocument, new Point(399, 185));

            // Click document
            Mouse.Click(uIItemDocument, new Point(1632, 32));
        }
        
        #region Properties
        public virtual Test_1Params Test_1Params
        {
            get
            {
                if ((this.mTest_1Params == null))
                {
                    this.mTest_1Params = new Test_1Params();
                }
                return this.mTest_1Params;
            }
        }
        
        public UILocalhostSentinelGooWindow UILocalhostSentinelGooWindow
        {
            get
            {
                if ((this.mUILocalhostSentinelGooWindow == null))
                {
                    this.mUILocalhostSentinelGooWindow = new UILocalhostSentinelGooWindow();
                }
                return this.mUILocalhostSentinelGooWindow;
            }
        }
        
        public UIThepageatlocalhostsaWindow UIThepageatlocalhostsaWindow
        {
            get
            {
                if ((this.mUIThepageatlocalhostsaWindow == null))
                {
                    this.mUIThepageatlocalhostsaWindow = new UIThepageatlocalhostsaWindow();
                }
                return this.mUIThepageatlocalhostsaWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2();
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private Test_1Params mTest_1Params;
        
        private UILocalhostSentinelGooWindow mUILocalhostSentinelGooWindow;
        
        private UIThepageatlocalhostsaWindow mUIThepageatlocalhostsaWindow;
        
        private UIItemWindow2 mUIItemWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Test_1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class Test_1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'DR_ARCHITECT{Tab}randomnes' in document
        /// </summary>
        public string UIItemDocumentSendKeys = "DR_ARCHITECT{Tab}randomnes";
        
        /// <summary>
        /// Type 'randomness' in document
        /// </summary>
        public string UIItemDocumentSendKeys1 = "randomness";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UILocalhostSentinelGooWindow : WinWindow
    {
        
        public UILocalhostSentinelGooWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "localhost/Sentinel/ - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("localhost/Sentinel/ - Google Chrome");
            this.WindowTitles.Add("localhost/Sentinel/Home/Index - Google Chrome");
            this.WindowTitles.Add("Tracking - Google Chrome");
            this.WindowTitles.Add("Historical Tracking - Google Chrome");
            this.WindowTitles.Add("Live Tracking - Google Chrome");
            this.WindowTitles.Add("Signal Heatmap - Google Chrome");
            this.WindowTitles.Add("Asset Management - Google Chrome");
            this.WindowTitles.Add("Consignment Management - Google Chrome");
            this.WindowTitles.Add("localhost/Sentinel/AssetManagement/AssignedConsignments - Google Chrome");
            this.WindowTitles.Add("Unassigned Consignments - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "106181120";
            this.WindowTitles.Add("localhost/Sentinel/ - Google Chrome");
            this.WindowTitles.Add("localhost/Sentinel/Home/Index - Google Chrome");
            this.WindowTitles.Add("Tracking - Google Chrome");
            this.WindowTitles.Add("Historical Tracking - Google Chrome");
            this.WindowTitles.Add("Live Tracking - Google Chrome");
            this.WindowTitles.Add("Signal Heatmap - Google Chrome");
            this.WindowTitles.Add("Asset Management - Google Chrome");
            this.WindowTitles.Add("Consignment Management - Google Chrome");
            this.WindowTitles.Add("localhost/Sentinel/AssetManagement/AssignedConsignments - Google Chrome");
            this.WindowTitles.Add("Unassigned Consignments - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIItemDocument
        {
            get
            {
                if ((this.mUIItemDocument == null))
                {
                    this.mUIItemDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIItemDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIItemDocument.WindowTitles.Add("localhost/Sentinel/ - Google Chrome");
                    this.mUIItemDocument.WindowTitles.Add("localhost/Sentinel/Home/Index - Google Chrome");
                    this.mUIItemDocument.WindowTitles.Add("Tracking - Google Chrome");
                    this.mUIItemDocument.WindowTitles.Add("Historical Tracking - Google Chrome");
                    this.mUIItemDocument.WindowTitles.Add("Live Tracking - Google Chrome");
                    this.mUIItemDocument.WindowTitles.Add("Signal Heatmap - Google Chrome");
                    this.mUIItemDocument.WindowTitles.Add("Asset Management - Google Chrome");
                    this.mUIItemDocument.WindowTitles.Add("Consignment Management - Google Chrome");
                    this.mUIItemDocument.WindowTitles.Add("localhost/Sentinel/AssetManagement/AssignedConsignments - Google Chrome");
                    this.mUIItemDocument.WindowTitles.Add("Unassigned Consignments - Google Chrome");
                    #endregion
                }
                return this.mUIItemDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIItemDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIThepageatlocalhostsaWindow : WinWindow
    {
        
        public UIThepageatlocalhostsaWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "The page at localhost says:";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("The page at localhost says:");
            #endregion
        }
        
        #region Properties
        public WinClient UIThepageatlocalhostsaClient
        {
            get
            {
                if ((this.mUIThepageatlocalhostsaClient == null))
                {
                    this.mUIThepageatlocalhostsaClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIThepageatlocalhostsaClient.WindowTitles.Add("The page at localhost says:");
                    #endregion
                }
                return this.mUIThepageatlocalhostsaClient;
            }
        }
        
        public UIThepageatlocalhostsaClient1 UIThepageatlocalhostsaClient1
        {
            get
            {
                if ((this.mUIThepageatlocalhostsaClient1 == null))
                {
                    this.mUIThepageatlocalhostsaClient1 = new UIThepageatlocalhostsaClient1(this);
                }
                return this.mUIThepageatlocalhostsaClient1;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIThepageatlocalhostsaClient;
        
        private UIThepageatlocalhostsaClient1 mUIThepageatlocalhostsaClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIThepageatlocalhostsaClient1 : WinClient
    {
        
        public UIThepageatlocalhostsaClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("The page at localhost says:");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("The page at localhost says:");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.51106.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_RenderWidgetHostHWND";
            #endregion
        }
        
        #region Properties
        public WinControl UIItemDocument
        {
            get
            {
                if ((this.mUIItemDocument == null))
                {
                    this.mUIItemDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIItemDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    #endregion
                }
                return this.mUIItemDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIItemDocument;
        #endregion
    }
}
